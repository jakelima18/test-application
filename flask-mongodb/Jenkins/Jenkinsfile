def label = "kaniko-${UUID.randomUUID().toString()}"
def unit  = "phpunit-${UUID.randomUUID().toString()}"
URL_CLUSTER_PROD = "https://52.246.117.151:443"


podTemplate(name: 'kaniko', label: label, yaml: """
kind: Pod
metadata:
  name: kaniko
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: Always
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
      - name: jenkins-docker-cfg
        mountPath: /kaniko/.docker
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: jenkins-docker-cfg
          items:
            - key: config.json
              path: config.json               
"""
  ) 
  {
  node(label) {
    stage('Build Kaniko') {
      git 'https://github.com/jakelima18/test-application.git'
      container(name: 'kaniko', shell: '/busybox/sh') {
          sh '''#!/busybox/sh
          /kaniko/executor -f Dockerfile -c `pwd`/flask-mongodb/ --destination=jacksonlima91/backend-flask:$BUILD_NUMBER 
          '''
      }
    }
   }
  }

  podTemplate(label: 'kubectl', containers: [
    containerTemplate(name: 'kubectl', image: 'gcr.io/cloud-builders/kubectl', ttyEnabled: true, command: 'cat')
  ])
  {
  node('kubectl') {
  stage('Deploy') {
    container(name: 'kubectl')  {
     withKubeConfig([credentialsId: 'kubectl', serverUrl: '${URL_CLUSTER_PROD', contextName: 'jenkins-kubernetes', clusterName: 'jenkins-kubernetes', namespace: 'production']) {
      sh 'kubectl set image deployment/backend backend=jacksonlima91/backend-flask:$BUILD_NUMBER'
    }
      }
      }
  }
  }